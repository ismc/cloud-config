---
- name: Set AWS region subnet {{ cloud_network_item.name }} to {{ cloud_state }}
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_key | default(omit) }}"
    state: 'present'
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ cloud_network_item.cidr }}"
    region: "{{ cloud_vpc_data.region }}"
    az: "{{ cloud_network_item.az }}"
    resource_tags:
      Name: "{{ cloud_network_item.name | default('tenant_network_item.cidr') }}"
      tenant: "{{ cloud_vpc_data.project }}"
  register: subnet_result

- name: Set subnet route table for subnet {{ cloud_network_item.name }} to {{ cloud_state }}
  ec2_vpc_route_table:
    aws_access_key: "{{ aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_key | default(omit) }}"
    state: "{{ cloud_state | default('present') }}"
    vpc_id: "{{ vpc_result.vpc.id }}"
    region: "{{ cloud_vpc_data.region }}"
    tags:
      Name: "{{ cloud_network_item.name }}"
    subnets:
      - "{{ subnet_result.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_result.gateway_id }}"
  register: public_route_table

- name: Set AWS region subnet {{ cloud_network_item.name }} to {{ cloud_state }}
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_key | default(omit) }}"
    state: 'absent'
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ cloud_network_item.cidr }}"
    region: "{{ cloud_vpc_data.region }}"
    az: "{{ cloud_network_item.az }}"
    resource_tags:
      Name: "{{ cloud_network_item.name | default('tenant_network_item.cidr') }}"
      tenant: "{{ cloud_vpc_data.project }}"
  register: subnet_result
  when: cloud_state == 'absent'
